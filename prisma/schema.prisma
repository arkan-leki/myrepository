// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  role    Role     @default(USER)
  posts   Order[]
  profile Profile?
}

model Customer {
  id      Int     @id @default(autoincrement())
  address String  @unique
  name    String?
  posts   Order[]
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

model Order {
  id         Int              @id @default(autoincrement())
  title      String
  total      String   @default("0")
  products   ProductOnPosts[]
  createdAt  DateTime         @default(now())
  published  Boolean          @default(false)
  author     User             @relation(fields: [authorId], references: [id])
  authorId   Int
  customer   Customer         @relation(fields: [customerId], references: [id])
  customerId Int
}

model Device {
  id             Int              @id @default(autoincrement())
  code           String
  product        Product          @relation(fields: [productId], references: [id])
  productId      Int // relation scalar field (used in the `@relation` attribute above)
  ProductOnPosts ProductOnPosts[]
}

model Brand {
  id      Int       @id @default(autoincrement())
  name    String
  product Product[]
}

model Product {
  id      Int              @id @default(autoincrement())
  name    String
  price   String
  quantity String
  brand   Brand            @relation(fields: [brandId], references: [id])
  brandId Int // relation scalar field (used in the `@relation` attribute above)
  posts   ProductOnPosts[]
  devices Device[]
}

model ProductOnPosts {
  price      String
  quantity   String
  total      String   @default("0")
  post       Order    @relation(fields: [postId], references: [id])
  postId     Int // relation scalar field (used in the `@relation` attribute above)
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int // relation scalar field (used in the `@relation` attribute above)
  device     Device   @relation(fields: [deviceId], references: [id])
  deviceId   Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([postId, productId])
}

enum Role {
  USER
  ADMIN
}
